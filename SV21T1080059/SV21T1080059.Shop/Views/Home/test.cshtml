@model IEnumerable<CartItem>
@{
    Layout = null;

    int stt = 0;
    decimal sumOfPrice = 0;
}
<!-- Giỏ hàng -->
<div class="col-md-12">
    <table class="table table-bordered table-striped table-hover">
        <thead>
            <tr class="bg-primary">
                <th class="text-center">STT</th>
                <th class="text-center">Tên hàng</th>
                <th class="text-center">ĐVT</th>
                <th class="text-center">Số lượng</th>
                <th class="text-center">Giá</th>
                <th class="text-center">Thành tiền</th>
                <th style="width:40px"></th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Count() > 0)
            {
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="text-center">@(++stt)</td>
                        <td>@item.ProductName</td>
                        <td class="text-center">@item.Unit</td>
                        <td class="text-center">@item.Quantity</td>
                        <td class="text-right">@item.SalePrice.ToString("N0")</td>
                        <td class="text-right">@item.TotalPrice.ToString("N0")</td>
                        <td class="text-right">
                            <a href="~/Shopping/RemoveFromCart/@item.ProductID"
                               class="btn btn-xs btn-danger ajax-link"
                               onclick="return confirm('Xoá mặt hàng @item.ProductName ra khỏi giỏ hàng?')">
                                <i class="fa fa-minus"></i>
                            </a>
                        </td>
                    </tr>
                    sumOfPrice += item.TotalPrice;
                }
            }
            else
            {
                <tr>
                    <td colspan="7" class="text-center">
                        <p>Giỏ hàng trống</p>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <th colspan="5" class="text-right">Tổng cộng:</th>
                <th class="text-right">@sumOfPrice.ToString("N0")</th>
                <th></th>
            </tr>
        </tfoot>
    </table>
    <div class="text-right">
        <a href="~/Shopping/ClearCart" class="btn btn-sm btn-danger ajax-link"
           onclick="return confirm('Có muốn xóa giỏ hàng không?')">
            <i class="fa fa-trash"></i> Xóa giỏ hàng
        </a>
    </div>
</div>

<script>
    $(document).ready(function () {
        $(".ajax-link").click(function (e) {
            e.preventDefault();

            $.ajax({
                url: $(this).prop("href"),
                type: "GET",
                success: function (data) {
                    if (data != "") {
                        alert(data);
                    } else {
                        showShoppingCart();
                    }
                }
            });
        });
    });
</script>

<script>
    $(document).ready(function () {
        // Xử lý nút tăng số lượng
        $(".btn-increase").click(function () {
            var productId = $(this).data("id");
            updateCart(productId, 1); // Tăng số lượng
        });

        // Xử lý nút giảm số lượng
        $(".btn-decrease").click(function () {
            var productId = $(this).data("id");
            updateCart(productId, -1); // Giảm số lượng
        });

        // Hàm cập nhật giỏ hàng qua AJAX
        function updateCart(productId, change) {
            var url = change > 0 ? '/Shopping/AddFromCart' : '/Shopping/RemoveFromCart';
            var data = { id: productId };

            $.ajax({
                url: url,
                type: "GET", // Chúng ta sẽ dùng GET cho cả Add và Remove vì chỉ cần thêm id
                data: data,
                success: function (response) {
                    if (response == "") {
                        // Cập nhật số lượng trên giao diện
                        var currentQuantity = parseInt($("#quantity-" + productId).text());

                        // Kiểm tra và tránh số lượng nhỏ hơn 0
                        if (change < 0 && currentQuantity <= 1) {
                            return; // Không giảm nếu số lượng bằng 1
                        }

                        // Tăng/Giảm số lượng hiển thị
                        var newQuantity = currentQuantity + change;
                        $("#quantity-" + productId).text(newQuantity);

                        // Cập nhật tổng giá
                        var salePrice = parseFloat($("#quantity-" + productId).data("price")); // Lấy giá sản phẩm
                        var totalChange = salePrice * change;

                        // Cập nhật sumOfPrice
                        var currentSum = parseFloat($("#sumOfPrice").text().replace(/\D/g, '')); // Loại bỏ dấu phân cách
                        var newSum = currentSum + totalChange;

                        // Hiển thị lại tổng giá trị giỏ hàng
                        $("#sumOfPrice").text(newSum.toLocaleString("vi-VN") + " đ");
                    } else {
                        alert(response.message);
                    }
                },
                error: function () {
                    alert("Có lỗi xảy ra khi cập nhật giỏ hàng.");
                }
            });
        }

        // Đảm bảo rằng các nút xoá/xoá toàn bộ cập nhật giao diện
        $(".ajax-link").click(function (e) {
            e.preventDefault();

            $.ajax({
                url: $(this).prop("href"),
                type: "GET",
                success: function (data) {
                    if (data != "") {
                        alert(data);
                    } else {
                        location.reload(); // Tải lại trang để cập nhật giỏ hàng
                    }
                }
            });
        });
    });
</script>
